version: '3.8'

services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
      target: production
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: npm run start:prod
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - banknet
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:${PORT}/ || exit 1']
      interval: 1m
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: bank-rdb
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgresbankdata:/var/lib/postgresql/data
    networks:
      - banknet
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: bank-redis
    image: redis:latest
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - banknet
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    container_name: bank-rabbitmq
    image: rabbitmq:3-management
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - 15672:15672  # RabbitMQ Management Plugin의 기본 포트
    networks:
      - banknet
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redisdata:
  postgresbankdata:
  rabbitmqdata:

networks:
  banknet:
    driver: bridge
