version: '3.8'

services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
      target: production
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - '4000:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - banknet
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:4000/ || exit 1']
      interval: 1m30s # interval을 1분 30초로 조정
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - banknet
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmq-diagnostics ping']
      interval: 1m30s # interval을 1분 30초로 조정
      timeout: 10s
      retries: 3
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  postgres:
    container_name: bank-rdb
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgresbankdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s  # 다른 서비스들과 동일한 간격
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - banknet
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

  redis:
    container_name: bank-redis
    image: redis:latest
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    networks:
      - banknet
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1m30s # interval을 1분 30초로 조정
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'

volumes:
  redisdata:
  postgresbankdata:
  rabbitmqdata:

networks:
  banknet:
